{"name":"hubot-temploy","version":"0.2.3","description":"Hubot script that temporarily deploys pull requests","main":"index.coffee","homepage":"https://github.com/p0deje/hubot-temploy","keywords":["hubot","deploy","github"],"license":"MIT","repository":"https://github.com/p0deje/hubot-temploy","dependencies":{"q":"*","js-yaml":"*"},"peerDependencies":{"hubot":"*"},"devDependencies":{"hubot":"*","coffee-script":"*","mocha":"*","chai":"*","sinon":"*","sinon-chai":"*","temp":"*","hubot-mock-adapter":"*"},"scripts":{"test":"mocha --compilers coffee:coffee-script/register $(find test -name '*_test.coffee' | sort -r)"},"gitHead":"d703b9fa7c0b79183bc7f55f5b6a89dc267bab94","versions":[{"number":"0.1.0","date":"2015-03-17T05:04:02.989Z"},{"number":"0.1.1","date":"2015-03-17T05:11:21.017Z"},{"number":"0.1.2","date":"2015-03-17T06:00:14.023Z"},{"number":"0.1.3","date":"2015-03-17T06:52:06.630Z"},{"number":"0.1.4","date":"2015-03-18T05:26:31.877Z"},{"number":"0.2.0","date":"2015-03-20T04:18:58.893Z"},{"number":"0.2.1","date":"2015-03-23T12:03:05.312Z"},{"number":"0.2.2","date":"2015-03-23T17:12:52.921Z"},{"number":"0.2.3","date":"2015-03-30T12:57:48.080Z"}],"readme":"# hubot-temploy [![Build Status](https://travis-ci.org/p0deje/hubot-temploy.svg)](https://travis-ci.org/p0deje/hubot-temploy) [![npm version](https://badge.fury.io/js/hubot-temploy.svg)](http://badge.fury.io/js/hubot-temploy)\n\n[Hubot](https://hubot.github.com/) script to temporarily deploy pull requests.\n\n# Install\n\nJust add `hubot-temploy` to your `package.json` and `external-scripts.json`.\n\nYou might also need to install [ngrok](https://ngrok.com/) if you plan to deploy application locally.\n\n# Commands\n\n* `hubot temploys` - list of temployed pull requests\n* `hubot temploy start owner/repo#1` - start temployment of pull request #1 for repository owner/repo\n* `hubot temploy stop owner/repo#1` - stop temployment of pull request #1 for repository owner/repo\n\n# Usage\n\nFirst of all, you need to create `.temploy.yml` configuration file. It should contain `start` and `stop` commands at least:\n\n```yaml\nstart: script/hubot_temploy_start.sh\nstop: script/hubot_temploy_stop.sh\n```\n\nThe start script should do everything necessary for your server to be running (let's pretend you have rails application) and spawn application in the background:\n\n```bash\n#!/bin/bash\ncp config/database.yml.example config/database.yml\nbundle install --path ~/.bundle\nbundle exec rake db:setup\nbundle exec rake assets:precompile RAILS_ENV=development\nbundle exec rails s -d\n```\n\nNow, you can tell hubot to temploy your application pull request:\n\n```\nhubot temploy start owner/repo#1\n```\n\n_where `owner/repo` is the path to your Github repository and `1` is your pull request number_\n\nAfter the script is executed, `hubot-temploy` will start [ngrok](https://ngrok.com/) (by default, on port 3000) and respond with exposed server URL.\n\nEvery 1 minute it will check teployment for HTTP requests. If no request has been made within \"time-to-live\" period (by default, 30 minutes since last request), temployment will be automatically stopped.\n\nTemployment stopping is done using `stop` script from configuration file (in this case it just kills rails process):\n\n```bash\n#!/bin/bash\nkill $(ps ax | grep '[r]ails s' | awk '{print $1}')\n```\n\nIt is also possible to force temployment stop:\n\n```\nhubot temploy stop owner/repo#1\n```\n\nYou can also take a look at [hubot-temploy-example](https://github.com/p0deje/hubot-temploy-example) for a minimal working repository.\n\nOf course, both examples are very simple and do not support parallel temployments (because ports/database are the same), so you might want to find a way to isolate each environment. One of the simplest solutions is to use Vagrant, create new virtual machine in start script and delete it in stop script.\n\n# Configuration\n\nYou can also change a couple of configuration options:\n\n```yaml\n# .temploy.yml\nngrok_command: vagrant ssh -c \"ngrok -log=stdout 3000\" # change ngrok command to use (note that \"-log=stdout\" is mandatory)\nttl: 60 # change time (in minutes) to wait since last HTTP request before stopping\n```\n\n# TODO\n\n1. Make tests less flaky (remove `sort -r` from `npm test`).\n2. Support [hubot-redis-brain](https://github.com/hubot-scripts/hubot-redis-brain).\n","created":"2015-03-17T05:04:02.989Z","modified":"2015-03-30T12:57:48.080Z","lastPublisher":{"name":"p0deje","email":"p0deje@gmail.com"},"owners":[{"name":"p0deje","email":"p0deje@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"hubot-temploy","_nodeVersion":"0.10.35","_npmUser":{"name":"p0deje","email":"p0deje@gmail.com"},"_npmVersion":"2.1.17","_rev":"1-f91bbf893cc53d09a2ebefa690792d00","_shasum":"7170fbf61c46adc7c97616826ff0dc80fcf8f2a2","author":{"name":"Alex Rodionov"},"bugs":{"url":"https://github.com/p0deje/hubot-temploy/issues"},"directories":{},"dist-tags":{"latest":"0.2.3"},"dist":{"shasum":"7170fbf61c46adc7c97616826ff0dc80fcf8f2a2","tarball":"http://registry.npmjs.org/hubot-temploy/-/hubot-temploy-0.2.3.tgz"},"maintainers":[{"name":"p0deje","email":"p0deje@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-03-30T12:57:48.080Z","created":"2015-03-17T05:04:02.989Z","0.1.0":"2015-03-17T05:04:02.989Z","0.1.1":"2015-03-17T05:11:21.017Z","0.1.2":"2015-03-17T06:00:14.023Z","0.1.3":"2015-03-17T06:52:06.630Z","0.1.4":"2015-03-18T05:26:31.877Z","0.2.0":"2015-03-20T04:18:58.893Z","0.2.1":"2015-03-23T12:03:05.312Z","0.2.2":"2015-03-23T17:12:52.921Z","0.2.3":"2015-03-30T12:57:48.080Z"}}}