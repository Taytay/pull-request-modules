{"name":"travis-build-watcher","version":"0.0.2","description":"watch travis builds based on build id or github pull requests","homepage":"https://github.com/asutherland/travis-build-watcher","license":"MIT","main":"watch-pull-request.js","bin":{"travis-build-watcher":"./bin/travis-build-watcher"},"dependencies":{"commander":"~2.1.0","github":"~0.1.14","q":"~1.0.1","travis-ci":"~1.2.0"},"versions":[{"number":"0.0.1","date":"2014-04-03T12:54:27.920Z"},{"number":"0.0.2","date":"2014-04-03T12:55:23.975Z"}],"readme":"# Quick Examples #\n\nThese are things that work now (if you \"npm install -g gaudy-leds\", for\nexample):\n\n```\ntravis-build-watcher --state-update \"gaudy-leds set {{jobcolors}}\"  https://github.com/mozilla-b2g/gaia/pull/17940\n```\n\n```\ntravis-build-watcher --state-update \"gaudy-leds set {{jobcolors}}\" https://travis-ci.org/mozilla-b2g/gaia/builds/22183092\n```\n\nEverything below this is some combination of reality and dreams all smooshed\ntogether.\n\n# Overview #\n\nWe help you track a Travis build in-progress.  We do this by polling using the\nTravis API.  Travis does have some type of http://pusher.com/ API that it uses\nin its UI.  However, it is not defined as part of the public API and potentially\nincurs some type of cost of Travis.  Also, naive monitoring of the websocket\nstream as used by the UI does not perform filtering.\n\nI am considering polling at a low-rate for JSON data to be sufficiently friendly\nas compared to the expected overhead of leaving one or more travis-ci.org\nwindows open in the browser.  I don't know about you, but I open them and forget\nabout them for extended periods of time.  A script with failsafe timeouts seems\ngenerally safer.\n\n## General Operation ##\n\nYou run the command giving us a URL and a series of scripts to run as various\nthings happen.  We daemonize ourselves, we figure out how to map the URL to a\ntravis build.  We poll the job for progress, running actions as appropriate.\nWhen the build completes, our program terminates.\n\nRunaway behaviour on our part is prevented by associating a cost with our\nvarious requests and terminating if we cross the cost threshold.  We also\nenforce program termination after a long timeout.  The goals are to prevent\ninadvertent DoS or excessive resource consumption of github and travis resources\nor us clogging up your machine with dead processes or just spinning in buggy\ninfinite loops.\n\n# Action Templating #\n\n\n\n# Actions #\n\nNOTE! This is all speculative stuff right now except for \"--state-update\"\n\n## State Updates ##\n\nInvoke a script every time we update our knowledge of the build.  This includes\npolling and the last thing that happens.\n\n## Job Transitions ##\n\nInvoke a script when a job that's part of a build transitions.\n\nJobs can have any of the following states:\n- passed\n- failed\n- errored\n\n- `--job-any`: Invoke when a job starts/stops\n- `--job-start`: Invoke when a job starts.  This will not be invoked if the job\n   is canceled before starting or transitions to an end state without us\n   observing it actively running.\n- `--job-end`: Invoke when a job ends.  If you want to break this out further,\n   the following actions are mutually exclusive; only one will fire for a job\n   unless it gets rescheduled.\n  - `--job-pass`: Invoke when a job passes\n  - `--job-fail`: Invoke when a job fails\n  - `--job-errors`: Invoke when a job errors out / gets canceled.\n\n# Examples #\n\n## Actions ##\n\nAll actions currently just involve us building a command line and invoking some\nexternal script.\n\n### Generate a desktop-notification ###\n\nLet's assume you're on linux and you have notify-send installed (provided by\nlibnotify-bin on Ubuntu).\n\n## GitHub-based watches ##\n\n### Watch a Specific Pull-Request ###\n\nYou've got a github pull request URL.  Tell us it, we'll find the travis build\nlink or wait for it to show up, then watch that build.\n\n```\nwatch-pull-request.js \n```\n\n### Wait for a New Pull Request ###\n\nPoint us at the github repo that a pull request should soon show up at.  We\ncan infer this from the \"origin\" remote of the current directory's git repo.\n\n```\n```\n\n## Travis-based watches ##\n\n### Given a build URL ###\n","created":"2014-04-03T12:54:27.920Z","modified":"2014-04-03T12:55:23.975Z","lastPublisher":{"name":"asutherland","email":"sombrero@alum.mit.edu"},"owners":[{"name":"asutherland","email":"sombrero@alum.mit.edu"}],"other":{"_attachments":{},"_from":".","_id":"travis-build-watcher","_npmUser":{"name":"asutherland","email":"sombrero@alum.mit.edu"},"_npmVersion":"1.4.3","_rev":"1-461da4395415426eefd7e8ae2700ca86","author":{"name":"Andrew Sutherland","email":"asutherland@asutherland.org"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"9b07185193b9dbf74064b675c59d3926dcb6c791","tarball":"http://registry.npmjs.org/travis-build-watcher/-/travis-build-watcher-0.0.2.tgz"},"maintainers":[{"name":"asutherland","email":"sombrero@alum.mit.edu"}],"readmeFilename":"README.md","time":{"modified":"2014-04-03T12:55:23.975Z","created":"2014-04-03T12:54:27.920Z","0.0.1":"2014-04-03T12:54:27.920Z","0.0.2":"2014-04-03T12:55:23.975Z"}}}